broom::tidy(No_Age )
summary(No_Age)
############ Employment ################
No_Employment <- glm(Vote ~ Age + Gender + Province + Education + Income,
data = survey_data, family = "binomial")
broom::tidy(No_Employment )
summary(No_Employment)
############ Education  ################
No_Age_Employ  <- glm(Vote ~ Gender + Province  + Income + Education,
data = survey_data, family = "binomial")
broom::tidy(No_Age_Employ )
summary(No_Age_Employ )
# fit all lms
# summary table
# summary table of lm regression results
stargazer(Full, No_Age, No_Employment, No_Age_Employ,
omit = c("Province", "Constant"),
covariate.labels = c("Age65-", "GenderWoman", "EducationHigh School",
"EducationPost High School", "EmploymentEmployed",
"Income30000-69999", "Income70000-99999",
"Income100000-") ,
type='latex', header=FALSE,
omit.stat = c("ser", "f") ,
column.labels = c("Full Model", "No Age", "No Employment", "Neither"),
notes = "Province was included but not shown."
)
############# make prediction ###############
# log odds of estimate
census_data$rawestimate <-    No_Age_Employ %>%   predict(newdata = census_data)
#
# # transform to probability
census_data$Estimate <- as.numeric(exp(census_data$rawestimate)/(1+exp(census_data$rawestimate)))
#
census_data %<>% drop_na()
# probability == 0.5
sum(census_data$Estimate == 0.5)
# conservative cutoff
census_data$Vote <- ifelse(census_data$Estimate > 0.5, "Liberal Party", "Conservative Party")
p1 <-  ggplot( data = census_data,
aes(x = Income, y = Estimate, fill = Vote )) +
geom_boxplot() +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_minimal() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p1
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Vote )) +
geom_boxplot() +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p1
p1 <-  ggplot( data = census_data,
aes(x = Gender, y = Estimate, fill = Vote )) +
geom_boxplot() +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p1
p1 <-  ggplot( data = census_data,
aes(x = Province, y = Estimate, fill = Vote )) +
geom_boxplot() +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p1
########### final results #########
my_labels <- list(
Estimate = "Vote: MRP Prediction",
Vote = "Vote Choice"
)
table1 <- tableby(~Estimate + Vote, data = census_data)
summary(table1, labelTranslations = my_labels) %>%
kable()
######### real ############
realp2016 <-  0.3947/(0.3947 + 0.3189)
realp2019 <-  0.3312/(0.3312 + 0.3434)
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate )) +
geom_boxplot() +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p1
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p1
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black")
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p1
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p2 <-  ggplot( data = census_data,
aes(x = Income, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
grid.arrange(p1, p1, nrow = 1)
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p2 <-  ggplot( data = census_data,
aes(x = Income, y = Estimate, fill = Income )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
grid.arrange(p1, p1, nrow = 1)
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p2 <-  ggplot( data = census_data,
aes(x = Income, y = Estimate, fill = Income )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
grid.arrange(p1, p2, nrow = 1)
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p2 <-  ggplot( data = census_data,
aes(x = Income, y = Estimate, fill = Income )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black", angle = 30 , vjust = 0.5),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
grid.arrange(p1, p2, nrow = 1)
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p2 <-  ggplot( data = census_data,
aes(x = Income, y = Estimate, fill = Income )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black", angle = 30 , vjust = 0.5),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="right")
grid.arrange(p1, p2, nrow = 1)
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p2 <-  ggplot( data = census_data,
aes(x = Income, y = Estimate, fill = Income )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction",  fill = "2016 Census Data")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black", angle = 30 , vjust = 0.5),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="top")
grid.arrange(p1, p2, nrow = 1)
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p2 <-  ggplot( data = census_data,
aes(x = Income, y = Estimate, fill = Income )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black", angle = 30 , vjust = 0.5),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
grid.arrange(p1, p2, nrow = 1)
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p2 <-  ggplot( data = census_data,
aes(x = Income, y = Estimate, fill = Income )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black", angle = 30 , vjust = 0.5),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
grid.arrange(p1, p2, nrow = 1)
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="bottom")
p2 <-  ggplot( data = census_data,
aes(x = Income, y = Estimate, fill = Income )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Votes Prediction")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black", angle = 30 , vjust = 0.5),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="none")
grid.arrange(p1, p2, nrow = 1)
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Voteting Probability: the Liberals")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="none")
p2 <-  ggplot( data = census_data,
aes(x = Income, y = Estimate, fill = Income )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Voteting Probability: the Liberals")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black", angle = 30 , vjust = 0.5),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="none")
grid.arrange(p1, p2, nrow = 1)
p1 <-  ggplot( data = census_data,
aes(x = Education, y = Estimate, fill = Education )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Voteting Probability: the Liberals")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black"),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="none")
p2 <-  ggplot( data = census_data,
aes(x = Income, y = Estimate, fill = Income )) +
geom_boxplot() +
geom_hline(yintercept =  0.5, color = "black") +
scale_fill_brewer( palette = color_set) +
labs(y = "Voteting Probability: the Liberals")+
theme_bw() +
# axis.text.x = element_text(size = fontSize -2, colour = "black") angle
theme(axis.text.x = element_text(size = fontSize -2, colour = "black", angle = 30 , vjust = 0.5),
axis.text.y = element_text(size = fontSize - 2, colour = "black"),
axis.title.x = element_text(size = fontSize),
axis.title.y = element_text(size = fontSize),
legend.text = element_text(size= fontSize - 2),
legend.title = element_text(size= fontSize),
legend.position="none")
grid.arrange(p1, p2, nrow = 1)
realp2019 <-  0.3312/(0.3312 + 0.3434)
